name: Build Release
on:
  workflow_dispatch:
  push:
    branches:
      - "prod"
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
  
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Get previous build number
        id: getPreviousBuild
        run: | 
          PREVIOUS_TAG=$(git for-each-ref --sort=-version:refname --count 1 --format="%(refname:short)" "refs/tags/*")
          echo result=${PREVIOUS_TAG} >> $GITHUB_OUTPUT
      - name: Get current build number
        id: getCurrentBuild
        if: success()
        env:
          PREVIOUS_BUILD: ${{ steps.getPreviousBuild.outputs.result }}
        run: echo result=$((++PREVIOUS_BUILD)) >> $GITHUB_OUTPUT
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          gradle-home-cache-cleanup: true
        env:
          BUILD_NUMBER: ${{ steps.getCurrentBuild.outputs.result }}
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: Velocity-all
          path: proxy/build/libs/*-all.jar
          if-no-files-found: error
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          custom_tag: ${{ steps.getCurrentBuild.outputs.result }}
      - name: Generate release diff
        if: success()
        env:
          BEGIN_COMMIT: ${{ steps.getPreviousBuild.outputs.result }}
          END_COMMIT: ${{ steps.getCurrentBuild.outputs.result }}
        run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${BEGIN_COMMIT}..${END_COMMIT} > release_notes.md
      - name: Create release
        uses: ncipollo/release-action@v1
        if: success()
        with:
          artifacts: "proxy/build/libs/*-all.jar"
          allowUpdates: true
          bodyFile: "release_notes.md"
          draft: true
          prerelease: false
          name: Build ${{ steps.getCurrentBuild.outputs.result }} (${{ github.ref_name }})
          tag: ${{ steps.getCurrentBuild.outputs.result }}
          token: ${{ secrets.GITHUB_TOKEN }}
